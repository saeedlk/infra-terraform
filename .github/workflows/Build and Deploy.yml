name: Build & Deploy Packer Template

on:
  workflow_dispatch:
#   push:
#    branches:
#      - main
  # pull_request:

permissions:
      id-token: write # This is required for aws oidc connection
      contents: read # This is required for actions/checkout
      pull-requests: write # This is required for gh bot to comment PR

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: .            
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ap-southeast-1
          role-session-name: GitHub-OIDC-TERRAFORM


      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5
          
      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: local-tfstate-lk
          AWS_BUCKET_KEY_NAME: terraform2.tfstate
          AWS_REGION: ap-southeast-1
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate and Plan
        run: |
          terraform validate -no-color
          terraform plan -out=tfplan
          
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
      
      - name: Create AMI
        id: create_image
        run: |
          timestamp=$(date +%Y-%m-%d_%H-%M-%S)
          image_name="myImageName_${timestamp}"
          instance_id=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=my-server-lk-" --query "Reservations[].Instances[].InstanceId" --output text)
          aws ec2 create-image --instance-id $instance_id --name "${image_name}" --region ap-southeast-1 --description "Image created from my infra-terra workflow" --output json

      - name: Wait for the image to become available
        run: sleep 220
      
      - name: Create Auto Scaling Group
        run: |
          aws ec2 create-launch-template \
          --launch-template-name server-lk- \
          launch_template_data=$(cat <<EOF
            {
              "ImageId": "$image_id",
              "InstanceType": "t2.micro",
            }
          EOF
          ) \
          --instance_type t2.micro \
          --launch_template_data "$launch_template_data"
          --image-id $image_id
          
          
          aws autoscaling create-auto-scaling-group \
          --auto-scaling-group-name my-asg-lk \
          --launch-template-name server-lk \
          --min-size 1 \
          --max-size 1 \
          --desired-capacity 1 \
          --availability-zones ap-southeast-1a,ap-southeast-1b

     # - name: Run Packer Container - Build & Deploy
      # pull official hashicorp packer container for docker hub
      #  uses: docker://hashicorp/packer:light
      #  env: # Grab the AWS environment variables for deployment
      #    AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      #    AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      #    AWS_GITHUB_TOKEN: ${{ secrets.AWS_GITHUB_TOKEN }}
      #  with:
      #    args: "build /github/workspace/templates/aws_template-intermediate.json"
